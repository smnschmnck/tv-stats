---
import { TMDB_SECRET_ACCESS_KEY } from "astro:env/server";
import type { TVShowDetails } from "../../../../types/tmdbApi/tvShowDetails";

const { showId } = Astro.props as { showId: string };

const getShowDetails = async () => {
  try {
    const res = await fetch(
      `https://api.themoviedb.org/3/tv/${showId}?language=en-US`,
      {
        headers: {
          accept: "application/json",
          Authorization: `Bearer ${TMDB_SECRET_ACCESS_KEY}`,
        },
      }
    );

    if (!res.ok) {
      return { error: "Show not found", showDetails: undefined };
    } else {
      const showDetails = (await res.json()) as TVShowDetails;
      return { error: undefined, showDetails };
    }
  } catch (e) {
    return { error: "Show not found", showDetails: undefined };
  }
};

const { error, showDetails } = await getShowDetails();
---

{!!error && <p>{error}</p>}
{
  !error && (
    <>
      <h1 class="text-lg font-bold">{showDetails!.name}</h1>

      {showDetails!.poster_path && (
        <div>
          <img
            class="w-72 rounded-xl"
            src={`https://image.tmdb.org/t/p/w500/${showDetails!.poster_path}`}
            alt={`${showDetails!.name} poster`}
          />
        </div>
      )}

      <p>{showDetails!.overview}</p>
    </>
  )
}
